<?php
module_load_include('inc', 'itonics_students', 'itonics_students.constant');
/** 
 * Implements hook_meni 
 */

function itonics_students_menu(){
    $items = [];
    $items['itonics_students'] = [
        'title' => 'Student welcome message', // page title
        'description' => 'Student Information', // description show when mouse hover on link
        'page callback' => 'itonics_students_welcome', //callback function which is invoked when menu item is called.
        'page arguments' => ['one','two'],
        'access callback' => TRUE, //any user can access this page 
    ];
    $items['itonics_students/students_form'] = [
        'title' => 'Student Registration Form', 
        'page callback' => 'drupal_get_form', 
        'page arguments' => ['itonics_students_form'],
        'access callback' => TRUE, 
    ];
    $items['itonics_students/students_form/%'] = [
        'title' => 'Student Registration Form', 
        'page callback' => 'drupal_get_form', 
        'page arguments' => ['itonics_students_form',2],
        'access callback' => TRUE, 
    ];
    $items['itonics_students/students_records'] = [
        'title' => 'Students Records',
        'page callback' => 'itonics_students_records', 
         //'page arguments' => [2],
        'access callback' => TRUE, 
    ];

        // to display the records in table form using drupal api i.e theme_table
     $items['itonics_students/students_records/%/details'] = [
         'title' => 'StudentS Records', 
         'page callback' => 'itonics_students_details_view', //inbuilt function
         'page arguments' => [2],
        'access callback' => TRUE, //any user can access this page 
     ];

     $items['itonics_students/students_records/%/delete'] = [
         'title' => 'student record delete page', // page title
         'page callback' => 'drupal_get_form', //inbuilt function
         'page arguments' => array('record_delete_confirm', 2),
        'access callback' => TRUE, //any user can access this page 
     ];
     $items['admin/reports/itonics_students/students_form'] = [
        'title' => 'student registration form', // page title
        'page callback' => 'drupal_get_form', //inbuilt function
        'page arguments' => ['itonics_students_form'],
        'access callback' => TRUE,
     ];

    return $items;
}

/**
 * call back function of route itonics_students
 * @param void
 * @return string
 */


function itonics_students_welcome($param1,$param2){
    echo "$param1 . $param2";
}

 function itonics_students_form($form, &$form_state,$student_id=NULL){
     drupal_add_css(drupal_get_path('module','itonics_students') . '/css/itonics_students.css'); // link css file 
     drupal_add_js(drupal_get_path('module','itonics_students') . '/js/itonics_students.js'); // link js file 

     $record = new stdClass();
     if(!empty($student_id))
     {
         $record = db_select('students_records','sr')
         ->fields('sr',['student_id','student_name','student_address','student_contact','student_email','student_abstract','student_checkboxes'])
         ->condition('student_id',$student_id)
         ->execute()->fetch();

         $form['student_id'] = [
            '#type' => 'hidden',
            '#default_value' => isset($record->student_id)?$record->student_id:NULL,
            ];

    }  


    
     
     $form['student_name'] = [
        '#type' => 'textfield', //input type text
        '#title' => 'Student Name',
        '#maxlength' => 10,
        '#default_value' => isset($record -> student_name) ? $record -> student_name:NULL,
        //'#required' => TRUE, //make this field required 


    ];
    $form['student_email'] = [
        '#type' => 'textfield', //input type text
        '#title' => 'Student email',
        '#default_value' => isset($record->student_email)?$record->student_email:NULL,

        '#required' => TRUE, //make this field required 


    ];
     $form['student_address'] = [
        '#type' => 'textfield', //input type text
        '#title' => 'Student Address',
        '#default_value' => isset($record->student_address)?$record->student_address:NULL,

        '#required' => TRUE, //make this field required 


    ];
     $form['student_contact'] = [
        '#type' => 'textfield', //input type text
        '#title' => 'Student Contact',
        '#default_value' => isset($record->student_contact)?$record->student_contact:NULL,

        '#required' => TRUE, //make this field required 


    ];
    $form['student_radios'] = [
        '#type' => 'radios', //input type text
        '#title' => 'Gender',
        '#options' => [
             'Male',
            'Female'=> 'Female',
            'Others' => 'Others',
        ],
        '#default_value' => isset($record->student_radios)?$record->student_radios:NULL,
        '#required' => TRUE, //make this field required
    ];
   
     
//     if(module_exists('students_additional_info')){
//     $form['student_hobbies'] = [
//         '#type' => 'textarea', //input type text
//         '#title' => 'About your hobbies',
//         '#required' => TRUE,
//         '#default_value' => isset($record->student_hobbies)?$record->student_hobbies:NULL,
//         '#attributes' => ['class' => ['itonics_students_textarea']]
//     ];
// }


     $form['student_abstract'] = [
        '#type' => 'textarea', //input type text
        '#title' => 'About yourself',
        '#default_value' => isset($record->student_abstract)?$record->student_abstract:NULL,

       // '#required' => TRUE, //make this field required 


    ];
    
    
$form['submit_button'] = array(
    '#type' => 'submit',
    '#value' => t('Submit'),
  );
 
  // assign function as handler of submit event
  $form['#submit'][] = 'itonics_students_form_submit';
  
  return $form;

}

function itonics_students_form_validate($form, &$form_state){
    $student_name= $form_state['values']['student_name'];
    if(empty($student_name)){
   form_set_error('student_name','student name is required');
   }
    else
    {
        if(strlen($student_name)>25){
            form_set_error('student_name','exceed required length');
        }
    }

}



  /**
   * capturing the form submit event
   * form_id_submit
   * form_id = module name/argument in form
   */
  
//   

  function itonics_students_form_submit($form, &$form_state){
    $email = $form_state['values']['student_email'];
    // this function will be executed after the click
    // event of the user on the “submit” button.
    // here Printing only the message
    $error = 1;
    //throws error if no student name or checkboxes or email has been inserted
    if (!isset($form_state['values']['student_name']) || !isset($form_state['values']['student_radios']) || !isset($form_state['values']['student_email'])) {
        $error = 0;
    }

    $email = $form_state['values']['student_email'];

    //Email Validation
    if (!valid_email_address($email)) {
        form_set_error('[student_email]', t('The email address appears to be invalid.'));
        $error = 0;
    }



    if ($error) {

        
        $student_name = $form_state['values']['student_name'];
        $student_email = $form_state['values']['student_email'];
        $student_address = $form_state['values']['student_address'];
        $student_contact = $form_state['values']['student_contact'];
        $student_radios =  $form_state['values']['student_radios'];
        $student_abstract = $form_state['values']['student_abstract'];
       
        $student_id = isset($form_state['values']['student_id']) ? $form_state['values']['student_id'] : '';


    if(!$student_id){
        // inserting into table
        $student_id = db_insert('students_records')
                    ->fields(array(
                        
                        'student_name' => $student_name,
                        'student_email' => $student_email,
                        'student_address' => $student_address,
                        'student_contact' => $student_contact,
                        'student_radios' => $student_radios,
                        'student_abstract' => $student_abstract,
                       
                        
                    ))
                    ->execute();
        drupal_set_message(t('record has been added!'));
    }else{
       // var_dump($student_id);exit;
            db_update('students_records')
            ->fields(array(
                
                'student_name' => $student_name,
                'student_email' => $student_email,
                'student_address' => $student_address,
                'student_contact' => $student_contact,
                'student_radios' => $student_radios,
                'student_abstract' => $student_abstract,
                
                
            ))
            ->condition('student_id',$student_id)
            ->execute();
        
        drupal_set_message(t('record has been updated!'));
    }

    drupal_goto("itonics_students/students_records");
       

    }
}
                






function itonics_students_records(){

$records = db_select('students_records','students_records')
  ->fields('students_records',['student_id','student_name','student_address','student_contact','student_email','student_abstract','student_checkboxes'])
  ->execute()->fetchAll();

 
$rows = [];


   // Table header
    $header = array( 
    t('Student Name'),// first column
    t('Email'),  
    t('Address'), // second column
    t('Contact'), // third column
    t('Gender'),// fourth column
    t('Bio'), // fourth column
     // fourth column
    t('action'),

   );


   // Table rows

   foreach($records as $key => $record){
   $rows[] = [
    $record->student_name,
    $record->student_address,
    $record->student_contact,
    $record->student_email,
    $record->student_abstract,
    $record->student_radios,
    l('<span>'.t('Edit').'</span>', 'itonics_students/student_form/' . $record->student_id, ['attributes' => ['class' => ['edit', 'btn'], 'data-text' => ['value 1']], 'html' => TRUE]).
     l(t('Delete'), "itonics_students/students_records/{$record->student_id}/delete").
     l(t('Details'), "itonics_students/students_records/{$record->student_id}/details")

];

   }                                
// Format and print out table.
return theme('table', array('header' => $header, 'rows'=> $rows));
}

function itonics_students_details_view($student_id){

  $studentDetail = db_select('students_records', 'sr')
  ->fields('sr')
  ->condition('sr.student_id', $student_id)
  ->execute()
  ->fetch();


    $form['name'] = [
        '#title' => 'Student Name',
        '#type' => 'textfield',
        '#value' => $studentDetail->student_name,
    ];

    return $form;


}


function record_delete_confirm($form, &$form_state, $student_id){
$studentDetail = db_select('students_records', 'sr')
->fields('sr')
->condition('sr.student_id', $student_id)
->execute()
->fetch();
$form['student_id'] = [
    '#type' => 'value',
    '#value' => $studentDetail->student_id
];
$form['student_name'] = [
    '#type' => 'value',
    '#value' => $studentDetail->student_name
];

return confirm_form($form, 
t('Are you sure you want to delete %name?', array('%name' => $studentDetail->student_name)),
'itonics_students/students_records',
t('This action cannot be undone.'),
t('Delete'),
t('Cancel')
);

}

function record_delete_confirm_submit($form, &$form_state) {

if($form_state['values']['confirm']) {
    $student_id = $form_state['values']['student_id'];
    $student_name = $form_state['values']['student_name'];
   
db_delete('students_records')
    ->condition('student_id', $student_id)
    ->execute();

  drupal_set_message(t('Student %name has been deleted.', array('%name' => $student_name)));

$form_state['redirect'] = 'itonics_students/students_records';
}
}



